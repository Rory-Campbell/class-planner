{"version":3,"sources":["NewExerciseForm.js","Exercise.js","Time.js","SetTime.js","AMRAP.js","EMOM.js","Circuit.js","Station.js","NewStationForm.js","ClassPlan.js","App.js","serviceWorker.js","index.js"],"names":["NewExerciseForm","props","state","exercise","select","reps","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","createExercise","id","uuid","className","onSubmit","type","placeholder","onChange","Component","Exercise","handleRemove","removeExercise","onClick","Time","mins","secs","SetTime","setTime","max","AMRAP","exercises","times","create","remove","newExercise","newTime","filter","t","map","key","time","EMOM","Circuit","circuitTime","calcTime","Station","removeStation","NewStationForm","createStation","htmlFor","class","ClassPlan","stations","classLength","newStation","station","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.524ec25c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport uuid from 'uuid/v4';\nimport './NewExerciseForm.css';\n\nclass NewExerciseForm extends Component { \n    constructor(props){\n        super(props);\n        this.state={\n            exercise:\"\",\n            select:\"\",\n            reps: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n      }\n\n      handleSubmit(evt) {\n        evt.preventDefault();\n        this.props.createExercise({ ...this.state, id: uuid(), });\n        this.setState({ exercise: \"\", reps: 0 });\n      }\n    \n    \n    render(){\n        return( \n            <div>\n                <form className=\"form-inline exercise-form\" onSubmit={this.handleSubmit}>\n                    <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"exercise\"\n                    placeholder=\"New exercise\"\n                    id=\"exercise\"\n                    value={this.state.exercise}\n                    onChange={this.handleChange}>\n                    \n\n                    </input>\n\n                    <select  value={this.state.select} onChange={this.handleChange} name=\"select\" id=\"rep/time-select\" className=\"form-control\">\n                        <option value=\"\">--Reps/Time--</option>\n                        <option value=\"time-select\">For Time</option>\n                        <option value=\"reps-select\">Number of Reps</option>\n                    </select>\n\n                    <input\n                    className=\"form-control\"\n                    type=\"number\"\n                    name=\"reps\"\n                    placeholder=\"reps\"\n                    id=\"reps\"\n                    value={this.state.reps}\n                    onChange={this.handleChange}>\n\n                    </input>\n                    <button className=\"btn btn-secondary\">Add Exercise</button>\n                </form>\n            </div>\n\n        )\n    \n    \n    }\n    \n}\n\nexport default NewExerciseForm;","import React, {Component} from 'react';\nimport './Exercise.css';\n\nclass Exercise extends Component{\n    constructor(props){\n        super(props);\n        this.handleRemove = this.handleRemove.bind(this);\n    }\n    handleRemove(){\n        this.props.removeExercise(this.props.id);\n    }\n    render(){\n    return (\n        <div>\n            <li> \n                <div className=\"exerciseDisplay\">\n                {this.props.exercise}\n                </div>\n                {this.props.select === \"time-select\" ? <div>\n                    {this.props.reps} Seconds\n                </div> : <div>\n                {this.props.reps} Reps\n                </div> }\n                \n                \n\n                \n\n            </li>\n            <button className=\"btn btn-sm btn-outline-danger\" onClick={this.handleRemove}>Delete Exercise</button>\n        </div>\n    )\n}\n}\n\nexport default Exercise;\n\n\n","import React, {Component} from 'react'; \n\nclass Time extends Component{ \n    render(){\n        return(\n            <div>\n                {this.props.mins}:{this.props.secs === 0 ? \"00\": this.props.secs}\n                \n            </div>\n        )\n    }\n}\n\nexport default Time;","import React, {Component} from 'react';\nimport uuid from 'uuid/v4';\n\nclass SetTime extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            mins:0,\n            secs:0\n        }\n       \n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n}\n\n\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.setTime({ ...this.state, id: uuid() });\n    this.setState({ mins:\"\", secs:\"\" });\n  }\n\n  render(){\n       \n      return(\n        <div>\n        \n        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n            <input className=\"form-control\" onChange={this.handleChange}\n                name=\"mins\"\n                value={this.state.mins}\n                type=\"number\"\n                placeholder=\"Mins\">\n            </input>\n                <input className=\"form-contol\" onChange={this.handleChange}\n                type=\"number\"\n                name=\"secs\"\n                value={this.state.secs}\n                placeholder=\"Secs\"\n                max=\"59\">\n                </input>\n            <button className=\"btn btn-secondary\">Set Time</button>\n        </form>\n        </div>\n      )\n  }\n    }\n\nexport default SetTime;\n","import React, {Component} from 'react';\nimport NewExerciseForm from './NewExerciseForm';\nimport Exercise from './Exercise';\nimport Time from './Time';\nimport SetTime from './SetTime';\nimport './AMRAP.css';\n\nclass AMRAP extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            exercises:[],\n            times:[]\n        }\n        this.setTime=this.setTime.bind(this);\n        this.create=this.create.bind(this);\n        this.remove=this.remove.bind(this);\n}\n\ncreate(newExercise) {\n    this.setState({\n      exercises: [...this.state.exercises, newExercise]\n    });\n  }\n\n  setTime(newTime) {\n    this.setState({\n      times: [...this.state.times, newTime]\n    });\n  }\n\n  remove(id){\n    this.setState({\n        exercises: this.state.exercises.filter(t => t.id !== id)\n    })\n}\n  \n\n    render(){\n        const exercises = this.state.exercises.map(exercise => {\n            return<Exercise \n            exercise={exercise.exercise}\n            reps={exercise.reps}\n            select={exercise.select}\n            key={exercise.id}\n            id={exercise.id}\n            removeExercise={this.remove}\n           />\n            });\n\n            const times= this.state.times.map(time => {\n                return<Time\n                mins={time.mins}\n                secs={time.secs}\n                id={time.id}\n                key={time.id}\n                />\n            })\n\n        return(\n            <div className=\"AMRAP-container\">\n                <h1 className=\"AMRAP-title\">AMRAP</h1>\n                \n            <div className=\"AMRAP-timer\">\n                {times}\n                \n                <SetTime  setTime={this.setTime}/>\n            </div>\n\n            <div className=\"AMRAP-exercise-display\">\n                <ol>\n                    {exercises}\n                </ol>\n            </div>\n            <div className=\"AMRAP-new-form\">\n                <NewExerciseForm createExercise={this.create}/>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default AMRAP;\n\n\n","import React, {Component} from 'react';\nimport NewExerciseForm from './NewExerciseForm';\nimport Exercise from './Exercise';\nimport Time from './Time';\nimport SetTime from './SetTime';\nimport './EMOM.css';\n\nclass EMOM extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            exercises:[],\n            times:[]\n        }\n        this.setTime=this.setTime.bind(this);\n        this.create=this.create.bind(this);\n        this.remove = this.remove.bind(this);\n}\n\ncreate(newExercise) {\n    this.setState({\n      exercises: [...this.state.exercises, newExercise]\n    });\n  }\n\n  setTime(newTime) {\n    this.setState({\n      times: [...this.state.times, newTime]\n    });\n  }\n  \n  remove(id){\n    this.setState({\n        exercises: this.state.exercises.filter(t => t.id !== id)\n    })\n}\n\n    render(){\n        const exercises = this.state.exercises.map(exercise => {\n            return<Exercise \n            exercise={exercise.exercise}\n            reps={exercise.reps}\n            select={exercise.select}\n            key={exercise.id}\n            id={exercise.id}\n            removeExercise={this.remove}\n           />\n            });\n\n            const times= this.state.times.map(time => {\n                return<Time\n                mins={time.mins}\n                id={time.id}\n                key={time.id}\n                \n                />\n            })\n\n        return(\n            <div className=\"EMOM-container\">\n\n                <h1 className=\"EMOM-title\">EMOM</h1>\n                \n                <div className=\"EMOM-timer\"> {times} \n\n                    <SetTime setTime={this.setTime}/>\n                </div>\n\n                <div className=\"EMOM-exercise-display\">\n                    <ol>\n                        {exercises}\n                    </ol>\n                </div>\n                <div className=\"EMOM-new-exercise-form\">\n                <NewExerciseForm createExercise={this.create}/>\n           </div>\n            </div>\n        )\n    }\n}\n\nexport default EMOM;","import React, {Component} from 'react';\nimport NewExerciseForm from './NewExerciseForm';\nimport Exercise from './Exercise';\nimport Time from './Time';\nimport SetTime from './SetTime';\nimport './Circuit.css';\n\nclass Circuit extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            exercises:[],\n            times:[],\n            circuitTime:0\n        }\n        this.setTime=this.setTime.bind(this);\n        this.create=this.create.bind(this);\n        this.remove = this.remove.bind(this);\n        \n        \n}\n\n\n\ncreate(newExercise) {\n    this.setState({\n      exercises: [...this.state.exercises, newExercise]\n    });\n  }\n\n  setTime(newTime) {\n    this.setState({\n      times: [...this.state.times, newTime]\n    });\n  }\n\n  remove(id){\n      this.setState({\n          exercises: this.state.exercises.filter(t => t.id !== id)\n      })\n  }\n\n  \n\n  \n  \n\n    render(){\n        const exercises = this.state.exercises.map(exercise => {\n            return<Exercise \n            exercise={exercise.exercise}\n            reps={exercise.reps}\n            select={exercise.select}\n            key={exercise.id}\n            id={exercise.id}\n            removeExercise={this.remove}\n           />\n            });\n\n           const times= this.state.times.map(time => {\n                return<Time\n                mins={time.mins}\n                secs={time.secs}\n                id={time.id}\n                key={time.id}\n                />\n            });\n\n           \n\n        return(\n            <div className=\"Circuit-container\">\n                \n                <div className=\"Circuit-title\">\n                <h1>Circuit</h1>\n                </div>\n\n               <div className=\"Circuit-timer\">{times}\n\n\n                \n\n                <SetTime setTime={this.setTime} onSubmit={this.calcTime}/>\n                </div>\n\n                <div className=\"Circuit-exercise-display\">\n                <ol>\n                    {exercises}\n                    \n                </ol>\n                </div>\n                \n                <div className=\"Cuircuit-new-form\">\n                <NewExerciseForm createExercise={this.create}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Circuit;","import React, {Component} from 'react';\nimport NewExerciseForm from './NewExerciseForm';\nimport Exercise from './Exercise';\nimport AMRAP from './AMRAP';\nimport EMOM from './EMOM';\nimport Circuit from './Circuit';\nimport './Station.css';\n\nclass Station extends Component{ \nconstructor(props){\n    super(props);\n    this.state = {exercises:[],\n        type: this.props.type\n               } \n\n    \n    this.handleRemove = this.handleRemove.bind(this);\n}\n\nhandleRemove(){\n        this.props.removeStation(this.props.id);\n    }\n\n\n\n  render(){\n    \n\n\n\n    return(\n        \n          <div>\n\n\n              {this.state.type === \"amrap\" ?\n              <AMRAP/> : this.state.type === \"circuit\" ? <Circuit/> :\n              <EMOM/>}\n              <button className=\"btn btn-lg btn-danger\" onClick={this.handleRemove}>Delete Station</button>\n              \n\n          \n\n          \n          </div>\n          \n    )\n        \n  }\n}\n\n\n\n\n\nexport default Station;\n","import React, {Component} from 'react';\nimport uuid from 'uuid/v4';\nimport './NewStationForm.css';\n\nclass NewStationForm extends Component{ \n    constructor(props){\n        super(props);\n        this.state={\n            type:\"\"\n        };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n      }\n\n      handleSubmit(evt) {\n        evt.preventDefault();\n        this.props.createStation({ ...this.state, id: uuid(), });\n        this.setState({ type:\"\" });\n      }\n    \n\n    render(){\n        return(\n           \n            <div>\n                \n\n            <div className=\"station-form\">\n                <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"type\">Station Type</label>\n                <select className=\"form-control form-control-sm\" value={this.state.type} onChange={this.handleChange} name=\"type\" id=\"type\">\n                  <option>Choose Type</option>\n                  <option value=\"amrap\">AMRAP</option>\n                  <option value=\"circuit\">Circuit</option>\n                  <option value=\"emom\">EMOM</option>\n               </select>\n\n\n                    <button class=\"btn btn-primary\">Add Station </button>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewStationForm;","import React, {Component} from 'react';\nimport Station from './Station';\nimport NewStationForm from './NewStationForm';\nimport SetTime from './SetTime';\nimport './ClassPlan.css';\n\n\nclass ClassPlan extends Component{\n    constructor(props){\n        super(props);\n        this.state = {stations:[],\n        classLength: \"\"} \n    \n        this.create=this.create.bind(this);\n        this.remove=this.remove.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n    }\n    \n    create(newStation) {\n        this.setState({\n          stations: [...this.state.stations, newStation]\n        });\n}\n\nremove(id){\n    this.setState({\n        stations: this.state.stations.filter(t => t.id !== id)\n    })\n}\n\nhandleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt){\n      evt.preventDefault();\n      return<h2>{this.state.classLength}</h2>\n\n\n  }\n\n\n\nrender(){\n    const stations = this.state.stations.map( station =>{\n        return<Station \n        type={station.type}\n        key={station.id}\n        id={station.id}\n        removeStation={this.remove}\n\n        />\n    });\n    return(\n        <div>\n        <div className=\"classPlan-container\">\n            <h1 className=\"classPlan-title\">Class Planner</h1>\n            \n            \n        \n            \n            \n            \n        <h2 className=\"classPlan-time-display\">{this.state.classLength} </h2>\n\n            <form className=\"classTime\">\n\n                <label htmlFor=\"classLength\">Class Length</label>\n\n                <select className=\"form-control\" id=\"classLength\" name=\"classLength\" value={this.state.classLength} onChange={this.handleChange}>\n                    <option value=\"30\">30 </option>\n                    <option value=\"45\">45 </option>\n                    <option value=\"60\">60 </option>\n                </select> \n                \n            </form>\n\n        <div className=\"classPlan-station-form\">\n            <NewStationForm createStation = {this.create}/>\n        </div>\n            \n        \n        </div>\n\n        {stations}\n        </div>\n    )\n}\n}\n\nexport default ClassPlan;","import React from 'react';\nimport './App.css';\nimport ClassPlan from './ClassPlan';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ClassPlan />\n\n     \n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}